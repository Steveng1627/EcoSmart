name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Lint
      run: pnpm run lint
    
    - name: Test
      run: pnpm run test
    
    - name: Build
      run: pnpm run build

  # Docker build and push (only when Docker Hub credentials are available)
  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && secrets.DOCKER_USERNAME != ''
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Gateway
      uses: docker/build-push-action@v5
      with:
        context: .
        file: apps/gateway/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/ecosmart-gateway:latest
          ${{ secrets.DOCKER_USERNAME }}/ecosmart-gateway:${{ github.sha }}
    
    - name: Build and push Web
      uses: docker/build-push-action@v5
      with:
        context: .
        file: apps/web/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/ecosmart-web:latest
          ${{ secrets.DOCKER_USERNAME }}/ecosmart-web:${{ github.sha }}

  # Skip Docker when no credentials are available
  docker-skip:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && secrets.DOCKER_USERNAME == ''
    
    steps:
    - name: Skip Docker build
      run: echo "Docker Hub credentials not configured. Skipping Docker build and push."

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your deployment commands here
